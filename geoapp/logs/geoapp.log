2025-06-01 20:09:54 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.yaml.snakeyaml.scanner.ScannerException: while scanning an alias
 in 'reader', line 28, column 23:
                packages: *
                          ^
unexpected character found 
(10)
 in 'reader', line 28, column 24:
                packages: *
                           ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.scanAnchor(ScannerImpl.java:1503)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchAlias(ScannerImpl.java:947)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:397)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:238)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue.produce(ParserImpl.java:669)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:161)
	at org.yaml.snakeyaml.comments.CommentEventsCollector$1.peek(CommentEventsCollector.java:57)
	at org.yaml.snakeyaml.comments.CommentEventsCollector$1.peek(CommentEventsCollector.java:43)
	at org.yaml.snakeyaml.comments.CommentEventsCollector.collectEvents(CommentEventsCollector.java:136)
	at org.yaml.snakeyaml.comments.CommentEventsCollector.collectEvents(CommentEventsCollector.java:116)
	at org.yaml.snakeyaml.composer.Composer.composeScalarNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:214)
	at org.yaml.snakeyaml.composer.Composer.composeKeyNode(Composer.java:386)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:357)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:329)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:218)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:396)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:361)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:329)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:218)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:396)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:361)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:329)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:218)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:396)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:361)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:329)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:218)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:396)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:361)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:329)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:218)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:396)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:361)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:329)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:218)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:396)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:361)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:329)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:218)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:141)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:162)
	at org.springframework.boot.env.OriginTrackedYamlLoader$OriginTrackingConstructor.getData(OriginTrackedYamlLoader.java:99)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:529)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:203)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:169)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:84)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.StandardConfigDataLoader.load(StandardConfigDataLoader.java:54)
	at org.springframework.boot.context.config.StandardConfigDataLoader.load(StandardConfigDataLoader.java:36)
	at org.springframework.boot.context.config.ConfigDataLoaders.load(ConfigDataLoaders.java:96)
	at org.springframework.boot.context.config.ConfigDataImporter.load(ConfigDataImporter.java:132)
	at org.springframework.boot.context.config.ConfigDataImporter.resolveAndLoad(ConfigDataImporter.java:87)
	at org.springframework.boot.context.config.ConfigDataEnvironmentContributors.withProcessedImports(ConfigDataEnvironmentContributors.java:121)
	at org.springframework.boot.context.config.ConfigDataEnvironment.processWithProfiles(ConfigDataEnvironment.java:316)
	at org.springframework.boot.context.config.ConfigDataEnvironment.processAndApply(ConfigDataEnvironment.java:237)
	at org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor.postProcessEnvironment(ConfigDataEnvironmentPostProcessor.java:96)
	at org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor.postProcessEnvironment(ConfigDataEnvironmentPostProcessor.java:89)
	at org.springframework.boot.env.EnvironmentPostProcessorApplicationListener.onApplicationEnvironmentPreparedEvent(EnvironmentPostProcessorApplicationListener.java:132)
	at org.springframework.boot.env.EnvironmentPostProcessorApplicationListener.onApplicationEvent(EnvironmentPostProcessorApplicationListener.java:115)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:81)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:64)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:63)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:353)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:313)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.rahulsmgv.geoapp.GeoappApplication.main(GeoappApplication.java:21)
2025-06-01 20:10:43 [main] INFO  c.rahulsmgv.geoapp.GeoappApplication - Starting GeoappApplication using Java 17.0.12 with PID 18816 (D:\Workspace\SpringBoot\DevUsingSpringBoot\geoapp\target\classes started by rahul in D:\Workspace\SpringBoot\DevUsingSpringBoot\geoapp)
2025-06-01 20:10:43 [main] DEBUG c.rahulsmgv.geoapp.GeoappApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-01 20:10:43 [main] INFO  c.rahulsmgv.geoapp.GeoappApplication - The following 1 profile is active: "dev"
2025-06-01 20:10:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-01 20:10:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-06-01 20:10:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 328 ms. Found 3 MongoDB repository interfaces.
2025-06-01 20:10:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-01 20:10:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-01 20:10:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.rahulsmgv.geoapp.repository.ConfigGeoAppRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-01 20:10:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.rahulsmgv.geoapp.repository.GeoAppRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-01 20:10:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.rahulsmgv.geoapp.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-01 20:10:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-06-01 20:10:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-01 20:10:46 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3273 ms
2025-06-01 20:10:47 [main] INFO  com.rahulsmgv.geoapp.cache.AppCache -  Reload Cache Data [ConfigEntity(api_key=systeminfo, api_value=https://api.restful-api.dev/objects), ConfigEntity(api_key=weatherapi, api_value=http://api.weatherapi.com/v1/current.json?key=API_KEY&q=CITY&aqi=yes)]
2025-06-01 20:10:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-06-01 20:10:50 [main] INFO  c.rahulsmgv.geoapp.GeoappApplication - Started GeoappApplication in 8.124 seconds (process running for 9.254)
2025-06-01 20:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - my-group: partitions assigned: [device-0, device-1, device-2]
2025-06-01 20:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.r.geoapp.service.ConsumerService - Producer produced data and consumer consume Hello My Name is Kafka
2025-06-01 20:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.r.geoapp.service.ConsumerService - Producer produced data and consumer consume Hello My Name is Kafka
2025-06-01 20:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.r.geoapp.service.ConsumerService - Producer produced data and consumer consume Hello My Name is Kafka
2025-06-01 20:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.r.geoapp.service.ConsumerService - Producer produced data and consumer consume Hello My Name is Kafka
2025-06-01 20:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.r.geoapp.service.ConsumerService - Producer produced data and consumer consume Hello My Name is Kafka
2025-06-01 20:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.r.geoapp.service.ConsumerService - Producer produced data and consumer consume Hello My Name is Kafka
2025-06-01 20:11:00 [scheduling-1] INFO  c.r.geoapp.scheduler.UserScheduler - Cron job running at - Sun Jun 01 20:11:00 IST 2025
2025-06-01 20:11:00 [scheduling-1] INFO  com.rahulsmgv.geoapp.cache.AppCache -  Reload Cache Data [ConfigEntity(api_key=systeminfo, api_value=https://api.restful-api.dev/objects), ConfigEntity(api_key=weatherapi, api_value=http://api.weatherapi.com/v1/current.json?key=API_KEY&q=CITY&aqi=yes)]
2025-06-01 20:11:00 [scheduling-1] INFO  c.r.geoapp.scheduler.UserScheduler - Cron job running at - Sun Jun 01 20:11:00 IST 2025
2025-06-01 20:11:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.r.geoapp.service.ConsumerService - Producer produced data and consumer consume Hello My Name is Kafka
2025-06-01 20:12:00 [scheduling-1] INFO  c.r.geoapp.scheduler.UserScheduler - Cron job running at - Sun Jun 01 20:12:00 IST 2025
2025-06-01 20:12:00 [scheduling-1] INFO  c.r.geoapp.scheduler.UserScheduler - Cron job running at - Sun Jun 01 20:12:00 IST 2025
2025-06-01 20:12:00 [scheduling-1] INFO  com.rahulsmgv.geoapp.cache.AppCache -  Reload Cache Data [ConfigEntity(api_key=systeminfo, api_value=https://api.restful-api.dev/objects), ConfigEntity(api_key=weatherapi, api_value=http://api.weatherapi.com/v1/current.json?key=API_KEY&q=CITY&aqi=yes)]
2025-06-01 20:12:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.r.geoapp.service.ConsumerService - Producer produced data and consumer consume Hello My Name is Kafka
2025-06-01 20:12:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - my-group: partitions revoked: [device-0, device-1, device-2]
2025-06-01 20:12:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - my-group: Consumer stopped
2025-06-01 20:12:28 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-01 20:12:28 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-01 20:15:25 [main] INFO  c.rahulsmgv.geoapp.GeoappApplication - Starting GeoappApplication using Java 17.0.12 with PID 18948 (D:\Workspace\SpringBoot\DevUsingSpringBoot\geoapp\target\classes started by rahul in D:\Workspace\SpringBoot\DevUsingSpringBoot\geoapp)
2025-06-01 20:15:25 [main] DEBUG c.rahulsmgv.geoapp.GeoappApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-01 20:15:25 [main] INFO  c.rahulsmgv.geoapp.GeoappApplication - The following 1 profile is active: "dev"
2025-06-01 20:15:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-01 20:15:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-06-01 20:15:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 310 ms. Found 3 MongoDB repository interfaces.
2025-06-01 20:15:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-01 20:15:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-01 20:15:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.rahulsmgv.geoapp.repository.ConfigGeoAppRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-01 20:15:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.rahulsmgv.geoapp.repository.GeoAppRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-01 20:15:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.rahulsmgv.geoapp.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-01 20:15:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2025-06-01 20:15:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-01 20:15:28 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3004 ms
2025-06-01 20:15:29 [main] INFO  com.rahulsmgv.geoapp.cache.AppCache -  Reload Cache Data [ConfigEntity(api_key=systeminfo, api_value=https://api.restful-api.dev/objects), ConfigEntity(api_key=weatherapi, api_value=http://api.weatherapi.com/v1/current.json?key=API_KEY&q=CITY&aqi=yes)]
2025-06-01 20:15:31 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-06-01 20:15:31 [main] INFO  c.rahulsmgv.geoapp.GeoappApplication - Started GeoappApplication in 7.507 seconds (process running for 8.618)
2025-06-01 20:15:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - my-group: partitions assigned: [device-0, device-1, device-2]
2025-06-01 20:16:00 [scheduling-1] INFO  c.r.geoapp.scheduler.UserScheduler - Cron job running at - Sun Jun 01 20:16:00 IST 2025
2025-06-01 20:16:00 [scheduling-1] INFO  c.r.geoapp.scheduler.UserScheduler - Cron job running at - Sun Jun 01 20:16:00 IST 2025
2025-06-01 20:16:00 [scheduling-1] INFO  com.rahulsmgv.geoapp.cache.AppCache -  Reload Cache Data [ConfigEntity(api_key=systeminfo, api_value=https://api.restful-api.dev/objects), ConfigEntity(api_key=weatherapi, api_value=http://api.weatherapi.com/v1/current.json?key=API_KEY&q=CITY&aqi=yes)]
2025-06-01 20:16:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.r.geoapp.service.ConsumerService - Received kafka produce message: Hello I am Learning Kafka
2025-06-01 20:16:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - my-group: partitions revoked: [device-0, device-1, device-2]
2025-06-01 20:16:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - my-group: Consumer stopped
2025-06-01 20:16:09 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-01 20:16:09 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
